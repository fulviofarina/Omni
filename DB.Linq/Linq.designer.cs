#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DB.Linq
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="k014")]
	public partial class LinqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertk0NAA(k0NAA instance);
    partial void Updatek0NAA(k0NAA instance);
    partial void Deletek0NAA(k0NAA instance);
    partial void InsertNAA(NAA instance);
    partial void UpdateNAA(NAA instance);
    partial void DeleteNAA(NAA instance);
    partial void InsertUnit(Unit instance);
    partial void UpdateUnit(Unit instance);
    partial void DeleteUnit(Unit instance);
    partial void InsertVialType(VialType instance);
    partial void UpdateVialType(VialType instance);
    partial void DeleteVialType(VialType instance);
    partial void InsertMatSSF(MatSSF instance);
    partial void UpdateMatSSF(MatSSF instance);
    partial void DeleteMatSSF(MatSSF instance);
    partial void InsertMatrix(Matrix instance);
    partial void UpdateMatrix(Matrix instance);
    partial void DeleteMatrix(Matrix instance);
    partial void InsertGeometry(Geometry instance);
    partial void UpdateGeometry(Geometry instance);
    partial void DeleteGeometry(Geometry instance);
    partial void InsertElement(Element instance);
    partial void UpdateElement(Element instance);
    partial void DeleteElement(Element instance);
    partial void InsertElementPerOrder(ElementPerOrder instance);
    partial void UpdateElementPerOrder(ElementPerOrder instance);
    partial void DeleteElementPerOrder(ElementPerOrder instance);
    partial void InsertComposition(Composition instance);
    partial void UpdateComposition(Composition instance);
    partial void DeleteComposition(Composition instance);
    partial void InsertChannel(Channel instance);
    partial void UpdateChannel(Channel instance);
    partial void DeleteChannel(Channel instance);
    partial void InsertCapsule(Capsule instance);
    partial void UpdateCapsule(Capsule instance);
    partial void DeleteCapsule(Capsule instance);
    partial void InsertSigma(Sigma instance);
    partial void UpdateSigma(Sigma instance);
    partial void DeleteSigma(Sigma instance);
    partial void InsertSigmasSal(SigmasSal instance);
    partial void UpdateSigmasSal(SigmasSal instance);
    partial void DeleteSigmasSal(SigmasSal instance);
    partial void InsertReaction(Reaction instance);
    partial void UpdateReaction(Reaction instance);
    partial void DeleteReaction(Reaction instance);
    partial void InsertMUE(MUE instance);
    partial void UpdateMUE(MUE instance);
    partial void DeleteMUE(MUE instance);
    #endregion
		
		public LinqDataContext() : 
				base(global::DB.Linq.Properties.Settings.Default.SSF, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<k0NAA> k0NAAs
		{
			get
			{
				return this.GetTable<k0NAA>();
			}
		}
		
		public System.Data.Linq.Table<NAA> NAAs
		{
			get
			{
				return this.GetTable<NAA>();
			}
		}
		
		public System.Data.Linq.Table<Unit> Units
		{
			get
			{
				return this.GetTable<Unit>();
			}
		}
		
		public System.Data.Linq.Table<VialType> VialTypes
		{
			get
			{
				return this.GetTable<VialType>();
			}
		}
		
		public System.Data.Linq.Table<MatSSF> MatSSFs
		{
			get
			{
				return this.GetTable<MatSSF>();
			}
		}
		
		public System.Data.Linq.Table<Matrix> Matrixes
		{
			get
			{
				return this.GetTable<Matrix>();
			}
		}
		
		public System.Data.Linq.Table<Geometry> Geometries
		{
			get
			{
				return this.GetTable<Geometry>();
			}
		}
		
		public System.Data.Linq.Table<Element> Elements
		{
			get
			{
				return this.GetTable<Element>();
			}
		}
		
		public System.Data.Linq.Table<ElementPerOrder> ElementPerOrders
		{
			get
			{
				return this.GetTable<ElementPerOrder>();
			}
		}
		
		public System.Data.Linq.Table<Composition> Compositions
		{
			get
			{
				return this.GetTable<Composition>();
			}
		}
		
		public System.Data.Linq.Table<Channel> Channels
		{
			get
			{
				return this.GetTable<Channel>();
			}
		}
		
		public System.Data.Linq.Table<Capsule> Capsules
		{
			get
			{
				return this.GetTable<Capsule>();
			}
		}
		
		public System.Data.Linq.Table<Sigma> Sigmas
		{
			get
			{
				return this.GetTable<Sigma>();
			}
		}
		
		public System.Data.Linq.Table<SigmasSal> SigmasSals
		{
			get
			{
				return this.GetTable<SigmasSal>();
			}
		}
		
		public System.Data.Linq.Table<Reaction> Reactions
		{
			get
			{
				return this.GetTable<Reaction>();
			}
		}
		
		public System.Data.Linq.Table<MUE> MUEs
		{
			get
			{
				return this.GetTable<MUE>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.k0NAA")]
	public partial class k0NAA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Iso;
		
		private string _Sym;
		
		private System.Nullable<double> _Energy;
		
		private System.Nullable<double> _k0;
		
		private System.Nullable<double> _k0Unc;
		
		private System.Nullable<short> _Codek0;
		
		private System.Nullable<double> _k0x;
		
		private System.Nullable<double> _k0xUnc;
		
		private System.Nullable<short> _Codek0x;
		
		private string _Comments;
		
		private System.Nullable<int> _NAAID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIsoChanging(string value);
    partial void OnIsoChanged();
    partial void OnSymChanging(string value);
    partial void OnSymChanged();
    partial void OnEnergyChanging(System.Nullable<double> value);
    partial void OnEnergyChanged();
    partial void Onk0Changing(System.Nullable<double> value);
    partial void Onk0Changed();
    partial void Onk0UncChanging(System.Nullable<double> value);
    partial void Onk0UncChanged();
    partial void OnCodek0Changing(System.Nullable<short> value);
    partial void OnCodek0Changed();
    partial void Onk0xChanging(System.Nullable<double> value);
    partial void Onk0xChanged();
    partial void Onk0xUncChanging(System.Nullable<double> value);
    partial void Onk0xUncChanged();
    partial void OnCodek0xChanging(System.Nullable<short> value);
    partial void OnCodek0xChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnNAAIDChanging(System.Nullable<int> value);
    partial void OnNAAIDChanged();
    #endregion
		
		public k0NAA()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Iso", DbType="NVarChar(255)")]
		public string Iso
		{
			get
			{
				return this._Iso;
			}
			set
			{
				if ((this._Iso != value))
				{
					this.OnIsoChanging(value);
					this.SendPropertyChanging();
					this._Iso = value;
					this.SendPropertyChanged("Iso");
					this.OnIsoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sym", DbType="NVarChar(255)")]
		public string Sym
		{
			get
			{
				return this._Sym;
			}
			set
			{
				if ((this._Sym != value))
				{
					this.OnSymChanging(value);
					this.SendPropertyChanging();
					this._Sym = value;
					this.SendPropertyChanged("Sym");
					this.OnSymChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Energy", DbType="Float")]
		public System.Nullable<double> Energy
		{
			get
			{
				return this._Energy;
			}
			set
			{
				if ((this._Energy != value))
				{
					this.OnEnergyChanging(value);
					this.SendPropertyChanging();
					this._Energy = value;
					this.SendPropertyChanged("Energy");
					this.OnEnergyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_k0", DbType="Float")]
		public System.Nullable<double> k0
		{
			get
			{
				return this._k0;
			}
			set
			{
				if ((this._k0 != value))
				{
					this.Onk0Changing(value);
					this.SendPropertyChanging();
					this._k0 = value;
					this.SendPropertyChanged("k0");
					this.Onk0Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_k0Unc", DbType="Float")]
		public System.Nullable<double> k0Unc
		{
			get
			{
				return this._k0Unc;
			}
			set
			{
				if ((this._k0Unc != value))
				{
					this.Onk0UncChanging(value);
					this.SendPropertyChanging();
					this._k0Unc = value;
					this.SendPropertyChanged("k0Unc");
					this.Onk0UncChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codek0", DbType="SmallInt")]
		public System.Nullable<short> Codek0
		{
			get
			{
				return this._Codek0;
			}
			set
			{
				if ((this._Codek0 != value))
				{
					this.OnCodek0Changing(value);
					this.SendPropertyChanging();
					this._Codek0 = value;
					this.SendPropertyChanged("Codek0");
					this.OnCodek0Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_k0x", DbType="Float")]
		public System.Nullable<double> k0x
		{
			get
			{
				return this._k0x;
			}
			set
			{
				if ((this._k0x != value))
				{
					this.Onk0xChanging(value);
					this.SendPropertyChanging();
					this._k0x = value;
					this.SendPropertyChanged("k0x");
					this.Onk0xChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_k0xUnc", DbType="Float")]
		public System.Nullable<double> k0xUnc
		{
			get
			{
				return this._k0xUnc;
			}
			set
			{
				if ((this._k0xUnc != value))
				{
					this.Onk0xUncChanging(value);
					this.SendPropertyChanging();
					this._k0xUnc = value;
					this.SendPropertyChanged("k0xUnc");
					this.Onk0xUncChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codek0x", DbType="SmallInt")]
		public System.Nullable<short> Codek0x
		{
			get
			{
				return this._Codek0x;
			}
			set
			{
				if ((this._Codek0x != value))
				{
					this.OnCodek0xChanging(value);
					this.SendPropertyChanging();
					this._Codek0x = value;
					this.SendPropertyChanged("Codek0x");
					this.OnCodek0xChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(255)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAAID", DbType="Int")]
		public System.Nullable<int> NAAID
		{
			get
			{
				return this._NAAID;
			}
			set
			{
				if ((this._NAAID != value))
				{
					this.OnNAAIDChanging(value);
					this.SendPropertyChanging();
					this._NAAID = value;
					this.SendPropertyChanged("NAAID");
					this.OnNAAIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NAA")]
	public partial class NAA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Iso;
		
		private string _Sym;
		
		private System.Nullable<int> _MD;
		
		private System.Nullable<double> _Qog;
		
		private System.Nullable<double> _QogUnc;
		
		private System.Nullable<double> _Qom;
		
		private System.Nullable<double> _QomUnc;
		
		private System.Nullable<double> _Qomg;
		
		private System.Nullable<double> _QomgUnc;
		
		private System.Nullable<double> _Er;
		
		private System.Nullable<double> _ErUnc;
		
		private System.Nullable<double> _T2;
		
		private System.Nullable<double> _T3;
		
		private System.Nullable<double> _T4;
		
		private System.Nullable<double> _F1;
		
		private System.Nullable<double> _F2;
		
		private System.Nullable<double> _F3;
		
		private System.Nullable<double> _F4;
		
		private System.Nullable<double> _Cd;
		
		private System.Nullable<bool> _Checked;
		
		private string _Comments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIsoChanging(string value);
    partial void OnIsoChanged();
    partial void OnSymChanging(string value);
    partial void OnSymChanged();
    partial void OnMDChanging(System.Nullable<int> value);
    partial void OnMDChanged();
    partial void OnQogChanging(System.Nullable<double> value);
    partial void OnQogChanged();
    partial void OnQogUncChanging(System.Nullable<double> value);
    partial void OnQogUncChanged();
    partial void OnQomChanging(System.Nullable<double> value);
    partial void OnQomChanged();
    partial void OnQomUncChanging(System.Nullable<double> value);
    partial void OnQomUncChanged();
    partial void OnQomgChanging(System.Nullable<double> value);
    partial void OnQomgChanged();
    partial void OnQomgUncChanging(System.Nullable<double> value);
    partial void OnQomgUncChanged();
    partial void OnErChanging(System.Nullable<double> value);
    partial void OnErChanged();
    partial void OnErUncChanging(System.Nullable<double> value);
    partial void OnErUncChanged();
    partial void OnT2Changing(System.Nullable<double> value);
    partial void OnT2Changed();
    partial void OnT3Changing(System.Nullable<double> value);
    partial void OnT3Changed();
    partial void OnT4Changing(System.Nullable<double> value);
    partial void OnT4Changed();
    partial void OnF1Changing(System.Nullable<double> value);
    partial void OnF1Changed();
    partial void OnF2Changing(System.Nullable<double> value);
    partial void OnF2Changed();
    partial void OnF3Changing(System.Nullable<double> value);
    partial void OnF3Changed();
    partial void OnF4Changing(System.Nullable<double> value);
    partial void OnF4Changed();
    partial void OnCdChanging(System.Nullable<double> value);
    partial void OnCdChanged();
    partial void OnCheckedChanging(System.Nullable<bool> value);
    partial void OnCheckedChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    #endregion
		
		public NAA()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Iso", DbType="NVarChar(255)")]
		public string Iso
		{
			get
			{
				return this._Iso;
			}
			set
			{
				if ((this._Iso != value))
				{
					this.OnIsoChanging(value);
					this.SendPropertyChanging();
					this._Iso = value;
					this.SendPropertyChanged("Iso");
					this.OnIsoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sym", DbType="NVarChar(255)")]
		public string Sym
		{
			get
			{
				return this._Sym;
			}
			set
			{
				if ((this._Sym != value))
				{
					this.OnSymChanging(value);
					this.SendPropertyChanging();
					this._Sym = value;
					this.SendPropertyChanged("Sym");
					this.OnSymChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD", DbType="Int")]
		public System.Nullable<int> MD
		{
			get
			{
				return this._MD;
			}
			set
			{
				if ((this._MD != value))
				{
					this.OnMDChanging(value);
					this.SendPropertyChanging();
					this._MD = value;
					this.SendPropertyChanged("MD");
					this.OnMDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qog", DbType="Float")]
		public System.Nullable<double> Qog
		{
			get
			{
				return this._Qog;
			}
			set
			{
				if ((this._Qog != value))
				{
					this.OnQogChanging(value);
					this.SendPropertyChanging();
					this._Qog = value;
					this.SendPropertyChanged("Qog");
					this.OnQogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QogUnc", DbType="Float")]
		public System.Nullable<double> QogUnc
		{
			get
			{
				return this._QogUnc;
			}
			set
			{
				if ((this._QogUnc != value))
				{
					this.OnQogUncChanging(value);
					this.SendPropertyChanging();
					this._QogUnc = value;
					this.SendPropertyChanged("QogUnc");
					this.OnQogUncChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qom", DbType="Float")]
		public System.Nullable<double> Qom
		{
			get
			{
				return this._Qom;
			}
			set
			{
				if ((this._Qom != value))
				{
					this.OnQomChanging(value);
					this.SendPropertyChanging();
					this._Qom = value;
					this.SendPropertyChanged("Qom");
					this.OnQomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QomUnc", DbType="Float")]
		public System.Nullable<double> QomUnc
		{
			get
			{
				return this._QomUnc;
			}
			set
			{
				if ((this._QomUnc != value))
				{
					this.OnQomUncChanging(value);
					this.SendPropertyChanging();
					this._QomUnc = value;
					this.SendPropertyChanged("QomUnc");
					this.OnQomUncChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qomg", DbType="Float")]
		public System.Nullable<double> Qomg
		{
			get
			{
				return this._Qomg;
			}
			set
			{
				if ((this._Qomg != value))
				{
					this.OnQomgChanging(value);
					this.SendPropertyChanging();
					this._Qomg = value;
					this.SendPropertyChanged("Qomg");
					this.OnQomgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QomgUnc", DbType="Float")]
		public System.Nullable<double> QomgUnc
		{
			get
			{
				return this._QomgUnc;
			}
			set
			{
				if ((this._QomgUnc != value))
				{
					this.OnQomgUncChanging(value);
					this.SendPropertyChanging();
					this._QomgUnc = value;
					this.SendPropertyChanged("QomgUnc");
					this.OnQomgUncChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Er", DbType="Float")]
		public System.Nullable<double> Er
		{
			get
			{
				return this._Er;
			}
			set
			{
				if ((this._Er != value))
				{
					this.OnErChanging(value);
					this.SendPropertyChanging();
					this._Er = value;
					this.SendPropertyChanged("Er");
					this.OnErChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErUnc", DbType="Float")]
		public System.Nullable<double> ErUnc
		{
			get
			{
				return this._ErUnc;
			}
			set
			{
				if ((this._ErUnc != value))
				{
					this.OnErUncChanging(value);
					this.SendPropertyChanging();
					this._ErUnc = value;
					this.SendPropertyChanged("ErUnc");
					this.OnErUncChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T2", DbType="Float")]
		public System.Nullable<double> T2
		{
			get
			{
				return this._T2;
			}
			set
			{
				if ((this._T2 != value))
				{
					this.OnT2Changing(value);
					this.SendPropertyChanging();
					this._T2 = value;
					this.SendPropertyChanged("T2");
					this.OnT2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T3", DbType="Float")]
		public System.Nullable<double> T3
		{
			get
			{
				return this._T3;
			}
			set
			{
				if ((this._T3 != value))
				{
					this.OnT3Changing(value);
					this.SendPropertyChanging();
					this._T3 = value;
					this.SendPropertyChanged("T3");
					this.OnT3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T4", DbType="Float")]
		public System.Nullable<double> T4
		{
			get
			{
				return this._T4;
			}
			set
			{
				if ((this._T4 != value))
				{
					this.OnT4Changing(value);
					this.SendPropertyChanging();
					this._T4 = value;
					this.SendPropertyChanged("T4");
					this.OnT4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F1", DbType="Float")]
		public System.Nullable<double> F1
		{
			get
			{
				return this._F1;
			}
			set
			{
				if ((this._F1 != value))
				{
					this.OnF1Changing(value);
					this.SendPropertyChanging();
					this._F1 = value;
					this.SendPropertyChanged("F1");
					this.OnF1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F2", DbType="Float")]
		public System.Nullable<double> F2
		{
			get
			{
				return this._F2;
			}
			set
			{
				if ((this._F2 != value))
				{
					this.OnF2Changing(value);
					this.SendPropertyChanging();
					this._F2 = value;
					this.SendPropertyChanged("F2");
					this.OnF2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F3", DbType="Float")]
		public System.Nullable<double> F3
		{
			get
			{
				return this._F3;
			}
			set
			{
				if ((this._F3 != value))
				{
					this.OnF3Changing(value);
					this.SendPropertyChanging();
					this._F3 = value;
					this.SendPropertyChanged("F3");
					this.OnF3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F4", DbType="Float")]
		public System.Nullable<double> F4
		{
			get
			{
				return this._F4;
			}
			set
			{
				if ((this._F4 != value))
				{
					this.OnF4Changing(value);
					this.SendPropertyChanging();
					this._F4 = value;
					this.SendPropertyChanged("F4");
					this.OnF4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cd", DbType="Float")]
		public System.Nullable<double> Cd
		{
			get
			{
				return this._Cd;
			}
			set
			{
				if ((this._Cd != value))
				{
					this.OnCdChanging(value);
					this.SendPropertyChanging();
					this._Cd = value;
					this.SendPropertyChanged("Cd");
					this.OnCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Checked", DbType="Bit")]
		public System.Nullable<bool> Checked
		{
			get
			{
				return this._Checked;
			}
			set
			{
				if ((this._Checked != value))
				{
					this.OnCheckedChanging(value);
					this.SendPropertyChanging();
					this._Checked = value;
					this.SendPropertyChanged("Checked");
					this.OnCheckedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(255)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Unit")]
	public partial class Unit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UnitID;
		
		private System.Nullable<int> _SampleID;
		
		private string _Name;
		
		private System.Nullable<double> _Gt;
		
		private System.Nullable<double> _Mass;
		
		private System.Nullable<double> _Density;
		
		private System.Nullable<double> _Diameter;
		
		private System.Nullable<double> _Length;
		
		private System.Nullable<double> _ChDiameter;
		
		private System.Nullable<double> _ChLength;
		
		private string _ChCfg;
		
		private System.Nullable<double> _MCL;
		
		private System.Nullable<double> _EXS;
		
		private System.Nullable<double> _PXS;
		
		private string _Content;
		
		private System.Nullable<bool> _ToDo;
		
		private System.Nullable<double> _ChTh;
		
		private System.Nullable<double> _GtCh;
		
		private System.Nullable<double> _kth;
		
		private System.Nullable<double> _kepi;
		
		private System.Nullable<bool> _Done;
		
		private System.Nullable<int> _MatrixID;
		
		private System.Nullable<int> _ChannelID;
		
		private System.Nullable<int> _VialTypeID;
		
		private System.Nullable<int> _ContainerID;
		
		private System.Nullable<System.DateTime> _LastChanged;
		
		private System.Nullable<System.DateTime> _LastCalc;
		
		private System.Data.Linq.Binary _SSFTable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUnitIDChanging(int value);
    partial void OnUnitIDChanged();
    partial void OnSampleIDChanging(System.Nullable<int> value);
    partial void OnSampleIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnGtChanging(System.Nullable<double> value);
    partial void OnGtChanged();
    partial void OnMassChanging(System.Nullable<double> value);
    partial void OnMassChanged();
    partial void OnDensityChanging(System.Nullable<double> value);
    partial void OnDensityChanged();
    partial void OnDiameterChanging(System.Nullable<double> value);
    partial void OnDiameterChanged();
    partial void OnLengthChanging(System.Nullable<double> value);
    partial void OnLengthChanged();
    partial void OnChDiameterChanging(System.Nullable<double> value);
    partial void OnChDiameterChanged();
    partial void OnChLengthChanging(System.Nullable<double> value);
    partial void OnChLengthChanged();
    partial void OnChCfgChanging(string value);
    partial void OnChCfgChanged();
    partial void OnMCLChanging(System.Nullable<double> value);
    partial void OnMCLChanged();
    partial void OnEXSChanging(System.Nullable<double> value);
    partial void OnEXSChanged();
    partial void OnPXSChanging(System.Nullable<double> value);
    partial void OnPXSChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnToDoChanging(System.Nullable<bool> value);
    partial void OnToDoChanged();
    partial void OnChThChanging(System.Nullable<double> value);
    partial void OnChThChanged();
    partial void OnGtChChanging(System.Nullable<double> value);
    partial void OnGtChChanged();
    partial void OnkthChanging(System.Nullable<double> value);
    partial void OnkthChanged();
    partial void OnkepiChanging(System.Nullable<double> value);
    partial void OnkepiChanged();
    partial void OnDoneChanging(System.Nullable<bool> value);
    partial void OnDoneChanged();
    partial void OnMatrixIDChanging(System.Nullable<int> value);
    partial void OnMatrixIDChanged();
    partial void OnChannelIDChanging(System.Nullable<int> value);
    partial void OnChannelIDChanged();
    partial void OnVialTypeIDChanging(System.Nullable<int> value);
    partial void OnVialTypeIDChanged();
    partial void OnContainerIDChanging(System.Nullable<int> value);
    partial void OnContainerIDChanged();
    partial void OnLastChangedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastChangedChanged();
    partial void OnLastCalcChanging(System.Nullable<System.DateTime> value);
    partial void OnLastCalcChanged();
    partial void OnSSFTableChanging(System.Data.Linq.Binary value);
    partial void OnSSFTableChanged();
    #endregion
		
		public Unit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UnitID
		{
			get
			{
				return this._UnitID;
			}
			set
			{
				if ((this._UnitID != value))
				{
					this.OnUnitIDChanging(value);
					this.SendPropertyChanging();
					this._UnitID = value;
					this.SendPropertyChanged("UnitID");
					this.OnUnitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleID", DbType="Int")]
		public System.Nullable<int> SampleID
		{
			get
			{
				return this._SampleID;
			}
			set
			{
				if ((this._SampleID != value))
				{
					this.OnSampleIDChanging(value);
					this.SendPropertyChanging();
					this._SampleID = value;
					this.SendPropertyChanged("SampleID");
					this.OnSampleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(55)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gt", DbType="Float")]
		public System.Nullable<double> Gt
		{
			get
			{
				return this._Gt;
			}
			set
			{
				if ((this._Gt != value))
				{
					this.OnGtChanging(value);
					this.SendPropertyChanging();
					this._Gt = value;
					this.SendPropertyChanged("Gt");
					this.OnGtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mass", DbType="Float")]
		public System.Nullable<double> Mass
		{
			get
			{
				return this._Mass;
			}
			set
			{
				if ((this._Mass != value))
				{
					this.OnMassChanging(value);
					this.SendPropertyChanging();
					this._Mass = value;
					this.SendPropertyChanged("Mass");
					this.OnMassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Density", DbType="Float")]
		public System.Nullable<double> Density
		{
			get
			{
				return this._Density;
			}
			set
			{
				if ((this._Density != value))
				{
					this.OnDensityChanging(value);
					this.SendPropertyChanging();
					this._Density = value;
					this.SendPropertyChanged("Density");
					this.OnDensityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diameter", DbType="Float")]
		public System.Nullable<double> Diameter
		{
			get
			{
				return this._Diameter;
			}
			set
			{
				if ((this._Diameter != value))
				{
					this.OnDiameterChanging(value);
					this.SendPropertyChanging();
					this._Diameter = value;
					this.SendPropertyChanged("Diameter");
					this.OnDiameterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="Float")]
		public System.Nullable<double> Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChDiameter", DbType="Float")]
		public System.Nullable<double> ChDiameter
		{
			get
			{
				return this._ChDiameter;
			}
			set
			{
				if ((this._ChDiameter != value))
				{
					this.OnChDiameterChanging(value);
					this.SendPropertyChanging();
					this._ChDiameter = value;
					this.SendPropertyChanged("ChDiameter");
					this.OnChDiameterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChLength", DbType="Float")]
		public System.Nullable<double> ChLength
		{
			get
			{
				return this._ChLength;
			}
			set
			{
				if ((this._ChLength != value))
				{
					this.OnChLengthChanging(value);
					this.SendPropertyChanging();
					this._ChLength = value;
					this.SendPropertyChanged("ChLength");
					this.OnChLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChCfg", DbType="NVarChar(50)")]
		public string ChCfg
		{
			get
			{
				return this._ChCfg;
			}
			set
			{
				if ((this._ChCfg != value))
				{
					this.OnChCfgChanging(value);
					this.SendPropertyChanging();
					this._ChCfg = value;
					this.SendPropertyChanged("ChCfg");
					this.OnChCfgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MCL", DbType="Float")]
		public System.Nullable<double> MCL
		{
			get
			{
				return this._MCL;
			}
			set
			{
				if ((this._MCL != value))
				{
					this.OnMCLChanging(value);
					this.SendPropertyChanging();
					this._MCL = value;
					this.SendPropertyChanged("MCL");
					this.OnMCLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXS", DbType="Float")]
		public System.Nullable<double> EXS
		{
			get
			{
				return this._EXS;
			}
			set
			{
				if ((this._EXS != value))
				{
					this.OnEXSChanging(value);
					this.SendPropertyChanging();
					this._EXS = value;
					this.SendPropertyChanged("EXS");
					this.OnEXSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PXS", DbType="Float")]
		public System.Nullable<double> PXS
		{
			get
			{
				return this._PXS;
			}
			set
			{
				if ((this._PXS != value))
				{
					this.OnPXSChanging(value);
					this.SendPropertyChanging();
					this._PXS = value;
					this.SendPropertyChanged("PXS");
					this.OnPXSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDo", DbType="Bit")]
		public System.Nullable<bool> ToDo
		{
			get
			{
				return this._ToDo;
			}
			set
			{
				if ((this._ToDo != value))
				{
					this.OnToDoChanging(value);
					this.SendPropertyChanging();
					this._ToDo = value;
					this.SendPropertyChanged("ToDo");
					this.OnToDoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChTh", DbType="Float")]
		public System.Nullable<double> ChTh
		{
			get
			{
				return this._ChTh;
			}
			set
			{
				if ((this._ChTh != value))
				{
					this.OnChThChanging(value);
					this.SendPropertyChanging();
					this._ChTh = value;
					this.SendPropertyChanged("ChTh");
					this.OnChThChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GtCh", DbType="Float")]
		public System.Nullable<double> GtCh
		{
			get
			{
				return this._GtCh;
			}
			set
			{
				if ((this._GtCh != value))
				{
					this.OnGtChChanging(value);
					this.SendPropertyChanging();
					this._GtCh = value;
					this.SendPropertyChanged("GtCh");
					this.OnGtChChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kth", DbType="Float")]
		public System.Nullable<double> kth
		{
			get
			{
				return this._kth;
			}
			set
			{
				if ((this._kth != value))
				{
					this.OnkthChanging(value);
					this.SendPropertyChanging();
					this._kth = value;
					this.SendPropertyChanged("kth");
					this.OnkthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kepi", DbType="Float")]
		public System.Nullable<double> kepi
		{
			get
			{
				return this._kepi;
			}
			set
			{
				if ((this._kepi != value))
				{
					this.OnkepiChanging(value);
					this.SendPropertyChanging();
					this._kepi = value;
					this.SendPropertyChanged("kepi");
					this.OnkepiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Done", DbType="Bit")]
		public System.Nullable<bool> Done
		{
			get
			{
				return this._Done;
			}
			set
			{
				if ((this._Done != value))
				{
					this.OnDoneChanging(value);
					this.SendPropertyChanging();
					this._Done = value;
					this.SendPropertyChanged("Done");
					this.OnDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatrixID", DbType="Int")]
		public System.Nullable<int> MatrixID
		{
			get
			{
				return this._MatrixID;
			}
			set
			{
				if ((this._MatrixID != value))
				{
					this.OnMatrixIDChanging(value);
					this.SendPropertyChanging();
					this._MatrixID = value;
					this.SendPropertyChanged("MatrixID");
					this.OnMatrixIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChannelID", DbType="Int")]
		public System.Nullable<int> ChannelID
		{
			get
			{
				return this._ChannelID;
			}
			set
			{
				if ((this._ChannelID != value))
				{
					this.OnChannelIDChanging(value);
					this.SendPropertyChanging();
					this._ChannelID = value;
					this.SendPropertyChanged("ChannelID");
					this.OnChannelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VialTypeID", DbType="Int")]
		public System.Nullable<int> VialTypeID
		{
			get
			{
				return this._VialTypeID;
			}
			set
			{
				if ((this._VialTypeID != value))
				{
					this.OnVialTypeIDChanging(value);
					this.SendPropertyChanging();
					this._VialTypeID = value;
					this.SendPropertyChanged("VialTypeID");
					this.OnVialTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContainerID", DbType="Int")]
		public System.Nullable<int> ContainerID
		{
			get
			{
				return this._ContainerID;
			}
			set
			{
				if ((this._ContainerID != value))
				{
					this.OnContainerIDChanging(value);
					this.SendPropertyChanging();
					this._ContainerID = value;
					this.SendPropertyChanged("ContainerID");
					this.OnContainerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanged", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastChanged
		{
			get
			{
				return this._LastChanged;
			}
			set
			{
				if ((this._LastChanged != value))
				{
					this.OnLastChangedChanging(value);
					this.SendPropertyChanging();
					this._LastChanged = value;
					this.SendPropertyChanged("LastChanged");
					this.OnLastChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastCalc", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastCalc
		{
			get
			{
				return this._LastCalc;
			}
			set
			{
				if ((this._LastCalc != value))
				{
					this.OnLastCalcChanging(value);
					this.SendPropertyChanging();
					this._LastCalc = value;
					this.SendPropertyChanged("LastCalc");
					this.OnLastCalcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSFTable", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary SSFTable
		{
			get
			{
				return this._SSFTable;
			}
			set
			{
				if ((this._SSFTable != value))
				{
					this.OnSSFTableChanging(value);
					this.SendPropertyChanging();
					this._SSFTable = value;
					this.SendPropertyChanged("SSFTable");
					this.OnSSFTableChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VialType")]
	public partial class VialType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VialTypeID;
		
		private string _VialTypeRef;
		
		private System.Nullable<double> _InnerRadius;
		
		private System.Nullable<double> _SideThickness;
		
		private System.Nullable<double> _BottomThickness;
		
		private System.Nullable<double> _Distance;
		
		private System.Nullable<int> _MatrixID;
		
		private System.Nullable<double> _MaxFillHeight;
		
		private string _Comments;
		
		private System.Nullable<bool> _IsRabbit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVialTypeIDChanging(int value);
    partial void OnVialTypeIDChanged();
    partial void OnVialTypeRefChanging(string value);
    partial void OnVialTypeRefChanged();
    partial void OnInnerRadiusChanging(System.Nullable<double> value);
    partial void OnInnerRadiusChanged();
    partial void OnSideThicknessChanging(System.Nullable<double> value);
    partial void OnSideThicknessChanged();
    partial void OnBottomThicknessChanging(System.Nullable<double> value);
    partial void OnBottomThicknessChanged();
    partial void OnDistanceChanging(System.Nullable<double> value);
    partial void OnDistanceChanged();
    partial void OnMatrixIDChanging(System.Nullable<int> value);
    partial void OnMatrixIDChanged();
    partial void OnMaxFillHeightChanging(System.Nullable<double> value);
    partial void OnMaxFillHeightChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnIsRabbitChanging(System.Nullable<bool> value);
    partial void OnIsRabbitChanged();
    #endregion
		
		public VialType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VialTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VialTypeID
		{
			get
			{
				return this._VialTypeID;
			}
			set
			{
				if ((this._VialTypeID != value))
				{
					this.OnVialTypeIDChanging(value);
					this.SendPropertyChanging();
					this._VialTypeID = value;
					this.SendPropertyChanged("VialTypeID");
					this.OnVialTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VialTypeRef", DbType="NVarChar(50)")]
		public string VialTypeRef
		{
			get
			{
				return this._VialTypeRef;
			}
			set
			{
				if ((this._VialTypeRef != value))
				{
					this.OnVialTypeRefChanging(value);
					this.SendPropertyChanging();
					this._VialTypeRef = value;
					this.SendPropertyChanged("VialTypeRef");
					this.OnVialTypeRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InnerRadius", DbType="Float")]
		public System.Nullable<double> InnerRadius
		{
			get
			{
				return this._InnerRadius;
			}
			set
			{
				if ((this._InnerRadius != value))
				{
					this.OnInnerRadiusChanging(value);
					this.SendPropertyChanging();
					this._InnerRadius = value;
					this.SendPropertyChanged("InnerRadius");
					this.OnInnerRadiusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SideThickness", DbType="Float")]
		public System.Nullable<double> SideThickness
		{
			get
			{
				return this._SideThickness;
			}
			set
			{
				if ((this._SideThickness != value))
				{
					this.OnSideThicknessChanging(value);
					this.SendPropertyChanging();
					this._SideThickness = value;
					this.SendPropertyChanged("SideThickness");
					this.OnSideThicknessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BottomThickness", DbType="Float")]
		public System.Nullable<double> BottomThickness
		{
			get
			{
				return this._BottomThickness;
			}
			set
			{
				if ((this._BottomThickness != value))
				{
					this.OnBottomThicknessChanging(value);
					this.SendPropertyChanging();
					this._BottomThickness = value;
					this.SendPropertyChanged("BottomThickness");
					this.OnBottomThicknessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Distance", DbType="Float")]
		public System.Nullable<double> Distance
		{
			get
			{
				return this._Distance;
			}
			set
			{
				if ((this._Distance != value))
				{
					this.OnDistanceChanging(value);
					this.SendPropertyChanging();
					this._Distance = value;
					this.SendPropertyChanged("Distance");
					this.OnDistanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatrixID", DbType="Int")]
		public System.Nullable<int> MatrixID
		{
			get
			{
				return this._MatrixID;
			}
			set
			{
				if ((this._MatrixID != value))
				{
					this.OnMatrixIDChanging(value);
					this.SendPropertyChanging();
					this._MatrixID = value;
					this.SendPropertyChanged("MatrixID");
					this.OnMatrixIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxFillHeight", DbType="Float")]
		public System.Nullable<double> MaxFillHeight
		{
			get
			{
				return this._MaxFillHeight;
			}
			set
			{
				if ((this._MaxFillHeight != value))
				{
					this.OnMaxFillHeightChanging(value);
					this.SendPropertyChanging();
					this._MaxFillHeight = value;
					this.SendPropertyChanged("MaxFillHeight");
					this.OnMaxFillHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(50)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRabbit", DbType="Bit")]
		public System.Nullable<bool> IsRabbit
		{
			get
			{
				return this._IsRabbit;
			}
			set
			{
				if ((this._IsRabbit != value))
				{
					this.OnIsRabbitChanging(value);
					this.SendPropertyChanging();
					this._IsRabbit = value;
					this.SendPropertyChanged("IsRabbit");
					this.OnIsRabbitChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MatSSF")]
	public partial class MatSSF : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MatSSFID;
		
		private string _TargetIsotope;
		
		private System.Nullable<double> _SSF;
		
		private System.Nullable<double> _GFast;
		
		private System.Nullable<int> _SubSamplesID;
		
		private System.Nullable<int> _UnitID;
		
		private string _RadioIsotope;
		
		private System.Nullable<double> _SSFCh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMatSSFIDChanging(int value);
    partial void OnMatSSFIDChanged();
    partial void OnTargetIsotopeChanging(string value);
    partial void OnTargetIsotopeChanged();
    partial void OnSSFChanging(System.Nullable<double> value);
    partial void OnSSFChanged();
    partial void OnGFastChanging(System.Nullable<double> value);
    partial void OnGFastChanged();
    partial void OnSubSamplesIDChanging(System.Nullable<int> value);
    partial void OnSubSamplesIDChanged();
    partial void OnUnitIDChanging(System.Nullable<int> value);
    partial void OnUnitIDChanged();
    partial void OnRadioIsotopeChanging(string value);
    partial void OnRadioIsotopeChanged();
    partial void OnSSFChChanging(System.Nullable<double> value);
    partial void OnSSFChChanged();
    #endregion
		
		public MatSSF()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatSSFID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MatSSFID
		{
			get
			{
				return this._MatSSFID;
			}
			set
			{
				if ((this._MatSSFID != value))
				{
					this.OnMatSSFIDChanging(value);
					this.SendPropertyChanging();
					this._MatSSFID = value;
					this.SendPropertyChanged("MatSSFID");
					this.OnMatSSFIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetIsotope", DbType="NVarChar(10)")]
		public string TargetIsotope
		{
			get
			{
				return this._TargetIsotope;
			}
			set
			{
				if ((this._TargetIsotope != value))
				{
					this.OnTargetIsotopeChanging(value);
					this.SendPropertyChanging();
					this._TargetIsotope = value;
					this.SendPropertyChanged("TargetIsotope");
					this.OnTargetIsotopeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSF", DbType="Float")]
		public System.Nullable<double> SSF
		{
			get
			{
				return this._SSF;
			}
			set
			{
				if ((this._SSF != value))
				{
					this.OnSSFChanging(value);
					this.SendPropertyChanging();
					this._SSF = value;
					this.SendPropertyChanged("SSF");
					this.OnSSFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GFast", DbType="Float")]
		public System.Nullable<double> GFast
		{
			get
			{
				return this._GFast;
			}
			set
			{
				if ((this._GFast != value))
				{
					this.OnGFastChanging(value);
					this.SendPropertyChanging();
					this._GFast = value;
					this.SendPropertyChanged("GFast");
					this.OnGFastChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubSamplesID", DbType="Int")]
		public System.Nullable<int> SubSamplesID
		{
			get
			{
				return this._SubSamplesID;
			}
			set
			{
				if ((this._SubSamplesID != value))
				{
					this.OnSubSamplesIDChanging(value);
					this.SendPropertyChanging();
					this._SubSamplesID = value;
					this.SendPropertyChanged("SubSamplesID");
					this.OnSubSamplesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitID", DbType="Int")]
		public System.Nullable<int> UnitID
		{
			get
			{
				return this._UnitID;
			}
			set
			{
				if ((this._UnitID != value))
				{
					this.OnUnitIDChanging(value);
					this.SendPropertyChanging();
					this._UnitID = value;
					this.SendPropertyChanged("UnitID");
					this.OnUnitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RadioIsotope", DbType="NVarChar(10)")]
		public string RadioIsotope
		{
			get
			{
				return this._RadioIsotope;
			}
			set
			{
				if ((this._RadioIsotope != value))
				{
					this.OnRadioIsotopeChanging(value);
					this.SendPropertyChanging();
					this._RadioIsotope = value;
					this.SendPropertyChanged("RadioIsotope");
					this.OnRadioIsotopeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSFCh", DbType="Float")]
		public System.Nullable<double> SSFCh
		{
			get
			{
				return this._SSFCh;
			}
			set
			{
				if ((this._SSFCh != value))
				{
					this.OnSSFChChanging(value);
					this.SendPropertyChanging();
					this._SSFCh = value;
					this.SendPropertyChanged("SSFCh");
					this.OnSSFChChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Matrix")]
	public partial class Matrix : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MatrixID;
		
		private string _MatrixName;
		
		private string _MatrixComposition;
		
		private System.Nullable<double> _MatrixDensity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMatrixIDChanging(int value);
    partial void OnMatrixIDChanged();
    partial void OnMatrixNameChanging(string value);
    partial void OnMatrixNameChanged();
    partial void OnMatrixCompositionChanging(string value);
    partial void OnMatrixCompositionChanged();
    partial void OnMatrixDensityChanging(System.Nullable<double> value);
    partial void OnMatrixDensityChanged();
    #endregion
		
		public Matrix()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatrixID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MatrixID
		{
			get
			{
				return this._MatrixID;
			}
			set
			{
				if ((this._MatrixID != value))
				{
					this.OnMatrixIDChanging(value);
					this.SendPropertyChanging();
					this._MatrixID = value;
					this.SendPropertyChanged("MatrixID");
					this.OnMatrixIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatrixName", DbType="NVarChar(50)")]
		public string MatrixName
		{
			get
			{
				return this._MatrixName;
			}
			set
			{
				if ((this._MatrixName != value))
				{
					this.OnMatrixNameChanging(value);
					this.SendPropertyChanging();
					this._MatrixName = value;
					this.SendPropertyChanged("MatrixName");
					this.OnMatrixNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatrixComposition", DbType="NVarChar(255)")]
		public string MatrixComposition
		{
			get
			{
				return this._MatrixComposition;
			}
			set
			{
				if ((this._MatrixComposition != value))
				{
					this.OnMatrixCompositionChanging(value);
					this.SendPropertyChanging();
					this._MatrixComposition = value;
					this.SendPropertyChanged("MatrixComposition");
					this.OnMatrixCompositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatrixDensity", DbType="Float")]
		public System.Nullable<double> MatrixDensity
		{
			get
			{
				return this._MatrixDensity;
			}
			set
			{
				if ((this._MatrixDensity != value))
				{
					this.OnMatrixDensityChanging(value);
					this.SendPropertyChanging();
					this._MatrixDensity = value;
					this.SendPropertyChanged("MatrixDensity");
					this.OnMatrixDensityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Geometry")]
	public partial class Geometry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GeometryID;
		
		private string _GeometryName;
		
		private System.Nullable<int> _VialTypeID;
		
		private System.Nullable<int> _MatrixID;
		
		private System.Nullable<double> _Radius;
		
		private System.Nullable<double> _FillHeight;
		
		private string _Comments;
		
		private System.Nullable<System.DateTime> _CreationDateTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGeometryIDChanging(int value);
    partial void OnGeometryIDChanged();
    partial void OnGeometryNameChanging(string value);
    partial void OnGeometryNameChanged();
    partial void OnVialTypeIDChanging(System.Nullable<int> value);
    partial void OnVialTypeIDChanged();
    partial void OnMatrixIDChanging(System.Nullable<int> value);
    partial void OnMatrixIDChanged();
    partial void OnRadiusChanging(System.Nullable<double> value);
    partial void OnRadiusChanged();
    partial void OnFillHeightChanging(System.Nullable<double> value);
    partial void OnFillHeightChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnCreationDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateTimeChanged();
    #endregion
		
		public Geometry()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeometryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GeometryID
		{
			get
			{
				return this._GeometryID;
			}
			set
			{
				if ((this._GeometryID != value))
				{
					this.OnGeometryIDChanging(value);
					this.SendPropertyChanging();
					this._GeometryID = value;
					this.SendPropertyChanged("GeometryID");
					this.OnGeometryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeometryName", DbType="NVarChar(50)")]
		public string GeometryName
		{
			get
			{
				return this._GeometryName;
			}
			set
			{
				if ((this._GeometryName != value))
				{
					this.OnGeometryNameChanging(value);
					this.SendPropertyChanging();
					this._GeometryName = value;
					this.SendPropertyChanged("GeometryName");
					this.OnGeometryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VialTypeID", DbType="Int")]
		public System.Nullable<int> VialTypeID
		{
			get
			{
				return this._VialTypeID;
			}
			set
			{
				if ((this._VialTypeID != value))
				{
					this.OnVialTypeIDChanging(value);
					this.SendPropertyChanging();
					this._VialTypeID = value;
					this.SendPropertyChanged("VialTypeID");
					this.OnVialTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatrixID", DbType="Int")]
		public System.Nullable<int> MatrixID
		{
			get
			{
				return this._MatrixID;
			}
			set
			{
				if ((this._MatrixID != value))
				{
					this.OnMatrixIDChanging(value);
					this.SendPropertyChanging();
					this._MatrixID = value;
					this.SendPropertyChanged("MatrixID");
					this.OnMatrixIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Radius", DbType="Float")]
		public System.Nullable<double> Radius
		{
			get
			{
				return this._Radius;
			}
			set
			{
				if ((this._Radius != value))
				{
					this.OnRadiusChanging(value);
					this.SendPropertyChanging();
					this._Radius = value;
					this.SendPropertyChanged("Radius");
					this.OnRadiusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FillHeight", DbType="Float")]
		public System.Nullable<double> FillHeight
		{
			get
			{
				return this._FillHeight;
			}
			set
			{
				if ((this._FillHeight != value))
				{
					this.OnFillHeightChanging(value);
					this.SendPropertyChanging();
					this._FillHeight = value;
					this.SendPropertyChanged("FillHeight");
					this.OnFillHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(255)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDateTime
		{
			get
			{
				return this._CreationDateTime;
			}
			set
			{
				if ((this._CreationDateTime != value))
				{
					this.OnCreationDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationDateTime = value;
					this.SendPropertyChanged("CreationDateTime");
					this.OnCreationDateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Elements")]
	public partial class Element : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _Z;
		
		private string _Element1;
		
		private string _ElementNameEn;
		
		private System.Nullable<int> _Row;
		
		private System.Nullable<int> _Col;
		
		private System.Nullable<bool> _Enabled;
		
		private string _Wiki;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnZChanging(System.Nullable<int> value);
    partial void OnZChanged();
    partial void OnElement1Changing(string value);
    partial void OnElement1Changed();
    partial void OnElementNameEnChanging(string value);
    partial void OnElementNameEnChanged();
    partial void OnRowChanging(System.Nullable<int> value);
    partial void OnRowChanged();
    partial void OnColChanging(System.Nullable<int> value);
    partial void OnColChanged();
    partial void OnEnabledChanging(System.Nullable<bool> value);
    partial void OnEnabledChanged();
    partial void OnWikiChanging(string value);
    partial void OnWikiChanged();
    #endregion
		
		public Element()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Z", DbType="Int")]
		public System.Nullable<int> Z
		{
			get
			{
				return this._Z;
			}
			set
			{
				if ((this._Z != value))
				{
					this.OnZChanging(value);
					this.SendPropertyChanging();
					this._Z = value;
					this.SendPropertyChanged("Z");
					this.OnZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Element", Storage="_Element1", DbType="NVarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Element1
		{
			get
			{
				return this._Element1;
			}
			set
			{
				if ((this._Element1 != value))
				{
					this.OnElement1Changing(value);
					this.SendPropertyChanging();
					this._Element1 = value;
					this.SendPropertyChanged("Element1");
					this.OnElement1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElementNameEn", DbType="NVarChar(50)")]
		public string ElementNameEn
		{
			get
			{
				return this._ElementNameEn;
			}
			set
			{
				if ((this._ElementNameEn != value))
				{
					this.OnElementNameEnChanging(value);
					this.SendPropertyChanging();
					this._ElementNameEn = value;
					this.SendPropertyChanged("ElementNameEn");
					this.OnElementNameEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Row", DbType="Int")]
		public System.Nullable<int> Row
		{
			get
			{
				return this._Row;
			}
			set
			{
				if ((this._Row != value))
				{
					this.OnRowChanging(value);
					this.SendPropertyChanging();
					this._Row = value;
					this.SendPropertyChanged("Row");
					this.OnRowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Col", DbType="Int")]
		public System.Nullable<int> Col
		{
			get
			{
				return this._Col;
			}
			set
			{
				if ((this._Col != value))
				{
					this.OnColChanging(value);
					this.SendPropertyChanging();
					this._Col = value;
					this.SendPropertyChanged("Col");
					this.OnColChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit")]
		public System.Nullable<bool> Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wiki", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Wiki
		{
			get
			{
				return this._Wiki;
			}
			set
			{
				if ((this._Wiki != value))
				{
					this.OnWikiChanging(value);
					this.SendPropertyChanging();
					this._Wiki = value;
					this.SendPropertyChanged("Wiki");
					this.OnWikiChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ElementPerOrder")]
	public partial class ElementPerOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ElementPerOrderID;
		
		private System.Nullable<int> _OrdersID;
		
		private System.Nullable<int> _ElementZ;
		
		private System.Nullable<int> _ProtocolsID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnElementPerOrderIDChanging(int value);
    partial void OnElementPerOrderIDChanged();
    partial void OnOrdersIDChanging(System.Nullable<int> value);
    partial void OnOrdersIDChanged();
    partial void OnElementZChanging(System.Nullable<int> value);
    partial void OnElementZChanged();
    partial void OnProtocolsIDChanging(System.Nullable<int> value);
    partial void OnProtocolsIDChanged();
    #endregion
		
		public ElementPerOrder()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElementPerOrderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ElementPerOrderID
		{
			get
			{
				return this._ElementPerOrderID;
			}
			set
			{
				if ((this._ElementPerOrderID != value))
				{
					this.OnElementPerOrderIDChanging(value);
					this.SendPropertyChanging();
					this._ElementPerOrderID = value;
					this.SendPropertyChanged("ElementPerOrderID");
					this.OnElementPerOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrdersID", DbType="Int")]
		public System.Nullable<int> OrdersID
		{
			get
			{
				return this._OrdersID;
			}
			set
			{
				if ((this._OrdersID != value))
				{
					this.OnOrdersIDChanging(value);
					this.SendPropertyChanging();
					this._OrdersID = value;
					this.SendPropertyChanged("OrdersID");
					this.OnOrdersIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElementZ", DbType="Int")]
		public System.Nullable<int> ElementZ
		{
			get
			{
				return this._ElementZ;
			}
			set
			{
				if ((this._ElementZ != value))
				{
					this.OnElementZChanging(value);
					this.SendPropertyChanging();
					this._ElementZ = value;
					this.SendPropertyChanged("ElementZ");
					this.OnElementZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProtocolsID", DbType="Int")]
		public System.Nullable<int> ProtocolsID
		{
			get
			{
				return this._ProtocolsID;
			}
			set
			{
				if ((this._ProtocolsID != value))
				{
					this.OnProtocolsIDChanging(value);
					this.SendPropertyChanging();
					this._ProtocolsID = value;
					this.SendPropertyChanged("ProtocolsID");
					this.OnProtocolsIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Compositions")]
	public partial class Composition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _MatrixID;
		
		private string _Formula;
		
		private string _Element;
		
		private System.Nullable<double> _Quantity;
		
		private System.Nullable<double> _Unc;
		
		private string _QuantityUnit;
		
		private string _UncUnit;
		
		private System.Nullable<double> _Weight;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMatrixIDChanging(System.Nullable<int> value);
    partial void OnMatrixIDChanged();
    partial void OnFormulaChanging(string value);
    partial void OnFormulaChanged();
    partial void OnElementChanging(string value);
    partial void OnElementChanged();
    partial void OnQuantityChanging(System.Nullable<double> value);
    partial void OnQuantityChanged();
    partial void OnUncChanging(System.Nullable<double> value);
    partial void OnUncChanged();
    partial void OnQuantityUnitChanging(string value);
    partial void OnQuantityUnitChanged();
    partial void OnUncUnitChanging(string value);
    partial void OnUncUnitChanged();
    partial void OnWeightChanging(System.Nullable<double> value);
    partial void OnWeightChanged();
    #endregion
		
		public Composition()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatrixID", DbType="Int")]
		public System.Nullable<int> MatrixID
		{
			get
			{
				return this._MatrixID;
			}
			set
			{
				if ((this._MatrixID != value))
				{
					this.OnMatrixIDChanging(value);
					this.SendPropertyChanging();
					this._MatrixID = value;
					this.SendPropertyChanged("MatrixID");
					this.OnMatrixIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Formula", DbType="NVarChar(50)")]
		public string Formula
		{
			get
			{
				return this._Formula;
			}
			set
			{
				if ((this._Formula != value))
				{
					this.OnFormulaChanging(value);
					this.SendPropertyChanging();
					this._Formula = value;
					this.SendPropertyChanged("Formula");
					this.OnFormulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Element", DbType="NChar(10)")]
		public string Element
		{
			get
			{
				return this._Element;
			}
			set
			{
				if ((this._Element != value))
				{
					this.OnElementChanging(value);
					this.SendPropertyChanging();
					this._Element = value;
					this.SendPropertyChanged("Element");
					this.OnElementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Float")]
		public System.Nullable<double> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unc", DbType="Float")]
		public System.Nullable<double> Unc
		{
			get
			{
				return this._Unc;
			}
			set
			{
				if ((this._Unc != value))
				{
					this.OnUncChanging(value);
					this.SendPropertyChanging();
					this._Unc = value;
					this.SendPropertyChanged("Unc");
					this.OnUncChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityUnit", DbType="NChar(10)")]
		public string QuantityUnit
		{
			get
			{
				return this._QuantityUnit;
			}
			set
			{
				if ((this._QuantityUnit != value))
				{
					this.OnQuantityUnitChanging(value);
					this.SendPropertyChanging();
					this._QuantityUnit = value;
					this.SendPropertyChanged("QuantityUnit");
					this.OnQuantityUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UncUnit", DbType="NChar(10)")]
		public string UncUnit
		{
			get
			{
				return this._UncUnit;
			}
			set
			{
				if ((this._UncUnit != value))
				{
					this.OnUncUnitChanging(value);
					this.SendPropertyChanging();
					this._UncUnit = value;
					this.SendPropertyChanged("UncUnit");
					this.OnUncUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Float")]
		public System.Nullable<double> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Channels")]
	public partial class Channel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ChannelsID;
		
		private string _ChannelName;
		
		private System.Nullable<double> _Alpha;
		
		private System.Nullable<double> _f;
		
		private string _IrReqCode;
		
		private string _Reactor;
		
		private System.Nullable<double> _kth;
		
		private System.Nullable<double> _kepi;
		
		private string _FluxType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChannelsIDChanging(int value);
    partial void OnChannelsIDChanged();
    partial void OnChannelNameChanging(string value);
    partial void OnChannelNameChanged();
    partial void OnAlphaChanging(System.Nullable<double> value);
    partial void OnAlphaChanged();
    partial void OnfChanging(System.Nullable<double> value);
    partial void OnfChanged();
    partial void OnIrReqCodeChanging(string value);
    partial void OnIrReqCodeChanged();
    partial void OnReactorChanging(string value);
    partial void OnReactorChanged();
    partial void OnkthChanging(System.Nullable<double> value);
    partial void OnkthChanged();
    partial void OnkepiChanging(System.Nullable<double> value);
    partial void OnkepiChanged();
    partial void OnFluxTypeChanging(string value);
    partial void OnFluxTypeChanged();
    #endregion
		
		public Channel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChannelsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ChannelsID
		{
			get
			{
				return this._ChannelsID;
			}
			set
			{
				if ((this._ChannelsID != value))
				{
					this.OnChannelsIDChanging(value);
					this.SendPropertyChanging();
					this._ChannelsID = value;
					this.SendPropertyChanged("ChannelsID");
					this.OnChannelsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChannelName", DbType="NVarChar(10)")]
		public string ChannelName
		{
			get
			{
				return this._ChannelName;
			}
			set
			{
				if ((this._ChannelName != value))
				{
					this.OnChannelNameChanging(value);
					this.SendPropertyChanging();
					this._ChannelName = value;
					this.SendPropertyChanged("ChannelName");
					this.OnChannelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alpha", DbType="Float")]
		public System.Nullable<double> Alpha
		{
			get
			{
				return this._Alpha;
			}
			set
			{
				if ((this._Alpha != value))
				{
					this.OnAlphaChanging(value);
					this.SendPropertyChanging();
					this._Alpha = value;
					this.SendPropertyChanged("Alpha");
					this.OnAlphaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f", DbType="Float")]
		public System.Nullable<double> f
		{
			get
			{
				return this._f;
			}
			set
			{
				if ((this._f != value))
				{
					this.OnfChanging(value);
					this.SendPropertyChanging();
					this._f = value;
					this.SendPropertyChanged("f");
					this.OnfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IrReqCode", DbType="NVarChar(5)")]
		public string IrReqCode
		{
			get
			{
				return this._IrReqCode;
			}
			set
			{
				if ((this._IrReqCode != value))
				{
					this.OnIrReqCodeChanging(value);
					this.SendPropertyChanging();
					this._IrReqCode = value;
					this.SendPropertyChanged("IrReqCode");
					this.OnIrReqCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reactor", DbType="NVarChar(10)")]
		public string Reactor
		{
			get
			{
				return this._Reactor;
			}
			set
			{
				if ((this._Reactor != value))
				{
					this.OnReactorChanging(value);
					this.SendPropertyChanging();
					this._Reactor = value;
					this.SendPropertyChanged("Reactor");
					this.OnReactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kth", DbType="Float")]
		public System.Nullable<double> kth
		{
			get
			{
				return this._kth;
			}
			set
			{
				if ((this._kth != value))
				{
					this.OnkthChanging(value);
					this.SendPropertyChanging();
					this._kth = value;
					this.SendPropertyChanged("kth");
					this.OnkthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kepi", DbType="Float")]
		public System.Nullable<double> kepi
		{
			get
			{
				return this._kepi;
			}
			set
			{
				if ((this._kepi != value))
				{
					this.OnkepiChanging(value);
					this.SendPropertyChanging();
					this._kepi = value;
					this.SendPropertyChanged("kepi");
					this.OnkepiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FluxType", DbType="NVarChar(50)")]
		public string FluxType
		{
			get
			{
				return this._FluxType;
			}
			set
			{
				if ((this._FluxType != value))
				{
					this.OnFluxTypeChanging(value);
					this.SendPropertyChanging();
					this._FluxType = value;
					this.SendPropertyChanged("FluxType");
					this.OnFluxTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Capsules")]
	public partial class Capsule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CapsulesID;
		
		private string _CapsuleName;
		
		private System.Nullable<int> _VialTypeID;
		
		private System.Nullable<bool> _ENAA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCapsulesIDChanging(int value);
    partial void OnCapsulesIDChanged();
    partial void OnCapsuleNameChanging(string value);
    partial void OnCapsuleNameChanged();
    partial void OnVialTypeIDChanging(System.Nullable<int> value);
    partial void OnVialTypeIDChanged();
    partial void OnENAAChanging(System.Nullable<bool> value);
    partial void OnENAAChanged();
    #endregion
		
		public Capsule()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapsulesID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CapsulesID
		{
			get
			{
				return this._CapsulesID;
			}
			set
			{
				if ((this._CapsulesID != value))
				{
					this.OnCapsulesIDChanging(value);
					this.SendPropertyChanging();
					this._CapsulesID = value;
					this.SendPropertyChanged("CapsulesID");
					this.OnCapsulesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapsuleName", DbType="NVarChar(50)")]
		public string CapsuleName
		{
			get
			{
				return this._CapsuleName;
			}
			set
			{
				if ((this._CapsuleName != value))
				{
					this.OnCapsuleNameChanging(value);
					this.SendPropertyChanging();
					this._CapsuleName = value;
					this.SendPropertyChanged("CapsuleName");
					this.OnCapsuleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VialTypeID", DbType="Int")]
		public System.Nullable<int> VialTypeID
		{
			get
			{
				return this._VialTypeID;
			}
			set
			{
				if ((this._VialTypeID != value))
				{
					this.OnVialTypeIDChanging(value);
					this.SendPropertyChanging();
					this._VialTypeID = value;
					this.SendPropertyChanged("VialTypeID");
					this.OnVialTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENAA", DbType="Bit")]
		public System.Nullable<bool> ENAA
		{
			get
			{
				return this._ENAA;
			}
			set
			{
				if ((this._ENAA != value))
				{
					this.OnENAAChanging(value);
					this.SendPropertyChanging();
					this._ENAA = value;
					this.SendPropertyChanged("ENAA");
					this.OnENAAChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sigmas")]
	public partial class Sigma : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Element;
		
		private string _Target;
		
		private System.Nullable<double> _theta;
		
		private System.Nullable<double> _sigma0;
		
		private System.Nullable<double> _I0;
		
		private System.Nullable<double> _sigmaEp;
		
		private int _ID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnElementChanging(string value);
    partial void OnElementChanged();
    partial void OnTargetChanging(string value);
    partial void OnTargetChanged();
    partial void OnthetaChanging(System.Nullable<double> value);
    partial void OnthetaChanged();
    partial void Onsigma0Changing(System.Nullable<double> value);
    partial void Onsigma0Changed();
    partial void OnI0Changing(System.Nullable<double> value);
    partial void OnI0Changed();
    partial void OnsigmaEpChanging(System.Nullable<double> value);
    partial void OnsigmaEpChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    #endregion
		
		public Sigma()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Element", DbType="NVarChar(5)")]
		public string Element
		{
			get
			{
				return this._Element;
			}
			set
			{
				if ((this._Element != value))
				{
					this.OnElementChanging(value);
					this.SendPropertyChanging();
					this._Element = value;
					this.SendPropertyChanged("Element");
					this.OnElementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Target", DbType="NVarChar(10)")]
		public string Target
		{
			get
			{
				return this._Target;
			}
			set
			{
				if ((this._Target != value))
				{
					this.OnTargetChanging(value);
					this.SendPropertyChanging();
					this._Target = value;
					this.SendPropertyChanged("Target");
					this.OnTargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_theta", DbType="Float")]
		public System.Nullable<double> theta
		{
			get
			{
				return this._theta;
			}
			set
			{
				if ((this._theta != value))
				{
					this.OnthetaChanging(value);
					this.SendPropertyChanging();
					this._theta = value;
					this.SendPropertyChanged("theta");
					this.OnthetaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sigma0", DbType="Float")]
		public System.Nullable<double> sigma0
		{
			get
			{
				return this._sigma0;
			}
			set
			{
				if ((this._sigma0 != value))
				{
					this.Onsigma0Changing(value);
					this.SendPropertyChanging();
					this._sigma0 = value;
					this.SendPropertyChanged("sigma0");
					this.Onsigma0Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I0", DbType="Float")]
		public System.Nullable<double> I0
		{
			get
			{
				return this._I0;
			}
			set
			{
				if ((this._I0 != value))
				{
					this.OnI0Changing(value);
					this.SendPropertyChanging();
					this._I0 = value;
					this.SendPropertyChanged("I0");
					this.OnI0Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sigmaEp", DbType="Float")]
		public System.Nullable<double> sigmaEp
		{
			get
			{
				return this._sigmaEp;
			}
			set
			{
				if ((this._sigmaEp != value))
				{
					this.OnsigmaEpChanging(value);
					this.SendPropertyChanging();
					this._sigmaEp = value;
					this.SendPropertyChanged("sigmaEp");
					this.OnsigmaEpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SigmasSal")]
	public partial class SigmasSal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Element;
		
		private System.Nullable<double> _Mat;
		
		private System.Nullable<double> _sigmaSal;
		
		private int _ID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnElementChanging(string value);
    partial void OnElementChanged();
    partial void OnMatChanging(System.Nullable<double> value);
    partial void OnMatChanged();
    partial void OnsigmaSalChanging(System.Nullable<double> value);
    partial void OnsigmaSalChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    #endregion
		
		public SigmasSal()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Element", DbType="NVarChar(5)")]
		public string Element
		{
			get
			{
				return this._Element;
			}
			set
			{
				if ((this._Element != value))
				{
					this.OnElementChanging(value);
					this.SendPropertyChanging();
					this._Element = value;
					this.SendPropertyChanged("Element");
					this.OnElementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mat", DbType="Float")]
		public System.Nullable<double> Mat
		{
			get
			{
				return this._Mat;
			}
			set
			{
				if ((this._Mat != value))
				{
					this.OnMatChanging(value);
					this.SendPropertyChanging();
					this._Mat = value;
					this.SendPropertyChanged("Mat");
					this.OnMatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sigmaSal", DbType="Float")]
		public System.Nullable<double> sigmaSal
		{
			get
			{
				return this._sigmaSal;
			}
			set
			{
				if ((this._sigmaSal != value))
				{
					this.OnsigmaSalChanging(value);
					this.SendPropertyChanging();
					this._sigmaSal = value;
					this.SendPropertyChanged("sigmaSal");
					this.OnsigmaSalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reactions")]
	public partial class Reaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Target;
		
		private string _Radioisotope;
		
		private int _ID;
		
		private string _Element;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTargetChanging(string value);
    partial void OnTargetChanged();
    partial void OnRadioisotopeChanging(string value);
    partial void OnRadioisotopeChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnElementChanging(string value);
    partial void OnElementChanged();
    #endregion
		
		public Reaction()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Target", DbType="NVarChar(10)")]
		public string Target
		{
			get
			{
				return this._Target;
			}
			set
			{
				if ((this._Target != value))
				{
					this.OnTargetChanging(value);
					this.SendPropertyChanging();
					this._Target = value;
					this.SendPropertyChanged("Target");
					this.OnTargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Radioisotope", DbType="NVarChar(10)")]
		public string Radioisotope
		{
			get
			{
				return this._Radioisotope;
			}
			set
			{
				if ((this._Radioisotope != value))
				{
					this.OnRadioisotopeChanging(value);
					this.SendPropertyChanging();
					this._Radioisotope = value;
					this.SendPropertyChanged("Radioisotope");
					this.OnRadioisotopeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Element", DbType="NVarChar(5)")]
		public string Element
		{
			get
			{
				return this._Element;
			}
			set
			{
				if ((this._Element != value))
				{
					this.OnElementChanging(value);
					this.SendPropertyChanging();
					this._Element = value;
					this.SendPropertyChanged("Element");
					this.OnElementChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MUES")]
	public partial class MUE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MUID;
		
		private System.Nullable<int> _MatrixID;
		
		private System.Nullable<double> _Energy;
		
		private System.Nullable<double> _MU;
		
		private System.Nullable<double> _MACS;
		
		private System.Nullable<double> _MAIS;
		
		private System.Nullable<double> _PE;
		
		private System.Nullable<double> _PPNF;
		
		private System.Nullable<double> _PPEF;
		
		private System.Nullable<double> _MATCS;
		
		private System.Nullable<double> _MATNCS;
		
		private System.Nullable<double> _Density;
		
		private string _Edge;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMUIDChanging(int value);
    partial void OnMUIDChanged();
    partial void OnMatrixIDChanging(System.Nullable<int> value);
    partial void OnMatrixIDChanged();
    partial void OnEnergyChanging(System.Nullable<double> value);
    partial void OnEnergyChanged();
    partial void OnMUChanging(System.Nullable<double> value);
    partial void OnMUChanged();
    partial void OnMACSChanging(System.Nullable<double> value);
    partial void OnMACSChanged();
    partial void OnMAISChanging(System.Nullable<double> value);
    partial void OnMAISChanged();
    partial void OnPEChanging(System.Nullable<double> value);
    partial void OnPEChanged();
    partial void OnPPNFChanging(System.Nullable<double> value);
    partial void OnPPNFChanged();
    partial void OnPPEFChanging(System.Nullable<double> value);
    partial void OnPPEFChanged();
    partial void OnMATCSChanging(System.Nullable<double> value);
    partial void OnMATCSChanged();
    partial void OnMATNCSChanging(System.Nullable<double> value);
    partial void OnMATNCSChanged();
    partial void OnDensityChanging(System.Nullable<double> value);
    partial void OnDensityChanged();
    partial void OnEdgeChanging(string value);
    partial void OnEdgeChanged();
    #endregion
		
		public MUE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MUID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MUID
		{
			get
			{
				return this._MUID;
			}
			set
			{
				if ((this._MUID != value))
				{
					this.OnMUIDChanging(value);
					this.SendPropertyChanging();
					this._MUID = value;
					this.SendPropertyChanged("MUID");
					this.OnMUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatrixID", DbType="Int")]
		public System.Nullable<int> MatrixID
		{
			get
			{
				return this._MatrixID;
			}
			set
			{
				if ((this._MatrixID != value))
				{
					this.OnMatrixIDChanging(value);
					this.SendPropertyChanging();
					this._MatrixID = value;
					this.SendPropertyChanged("MatrixID");
					this.OnMatrixIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Energy", DbType="Float")]
		public System.Nullable<double> Energy
		{
			get
			{
				return this._Energy;
			}
			set
			{
				if ((this._Energy != value))
				{
					this.OnEnergyChanging(value);
					this.SendPropertyChanging();
					this._Energy = value;
					this.SendPropertyChanged("Energy");
					this.OnEnergyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MU", AutoSync=AutoSync.Always, DbType="Float", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> MU
		{
			get
			{
				return this._MU;
			}
			set
			{
				if ((this._MU != value))
				{
					this.OnMUChanging(value);
					this.SendPropertyChanging();
					this._MU = value;
					this.SendPropertyChanged("MU");
					this.OnMUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACS", DbType="Float")]
		public System.Nullable<double> MACS
		{
			get
			{
				return this._MACS;
			}
			set
			{
				if ((this._MACS != value))
				{
					this.OnMACSChanging(value);
					this.SendPropertyChanging();
					this._MACS = value;
					this.SendPropertyChanged("MACS");
					this.OnMACSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAIS", DbType="Float")]
		public System.Nullable<double> MAIS
		{
			get
			{
				return this._MAIS;
			}
			set
			{
				if ((this._MAIS != value))
				{
					this.OnMAISChanging(value);
					this.SendPropertyChanging();
					this._MAIS = value;
					this.SendPropertyChanged("MAIS");
					this.OnMAISChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PE", DbType="Float")]
		public System.Nullable<double> PE
		{
			get
			{
				return this._PE;
			}
			set
			{
				if ((this._PE != value))
				{
					this.OnPEChanging(value);
					this.SendPropertyChanging();
					this._PE = value;
					this.SendPropertyChanged("PE");
					this.OnPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PPNF", DbType="Float")]
		public System.Nullable<double> PPNF
		{
			get
			{
				return this._PPNF;
			}
			set
			{
				if ((this._PPNF != value))
				{
					this.OnPPNFChanging(value);
					this.SendPropertyChanging();
					this._PPNF = value;
					this.SendPropertyChanged("PPNF");
					this.OnPPNFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PPEF", DbType="Float")]
		public System.Nullable<double> PPEF
		{
			get
			{
				return this._PPEF;
			}
			set
			{
				if ((this._PPEF != value))
				{
					this.OnPPEFChanging(value);
					this.SendPropertyChanging();
					this._PPEF = value;
					this.SendPropertyChanged("PPEF");
					this.OnPPEFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATCS", DbType="Float")]
		public System.Nullable<double> MATCS
		{
			get
			{
				return this._MATCS;
			}
			set
			{
				if ((this._MATCS != value))
				{
					this.OnMATCSChanging(value);
					this.SendPropertyChanging();
					this._MATCS = value;
					this.SendPropertyChanged("MATCS");
					this.OnMATCSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATNCS", DbType="Float")]
		public System.Nullable<double> MATNCS
		{
			get
			{
				return this._MATNCS;
			}
			set
			{
				if ((this._MATNCS != value))
				{
					this.OnMATNCSChanging(value);
					this.SendPropertyChanging();
					this._MATNCS = value;
					this.SendPropertyChanged("MATNCS");
					this.OnMATNCSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Density", DbType="Float")]
		public System.Nullable<double> Density
		{
			get
			{
				return this._Density;
			}
			set
			{
				if ((this._Density != value))
				{
					this.OnDensityChanging(value);
					this.SendPropertyChanging();
					this._Density = value;
					this.SendPropertyChanged("Density");
					this.OnDensityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edge", DbType="NVarChar(5)")]
		public string Edge
		{
			get
			{
				return this._Edge;
			}
			set
			{
				if ((this._Edge != value))
				{
					this.OnEdgeChanging(value);
					this.SendPropertyChanging();
					this._Edge = value;
					this.SendPropertyChanged("Edge");
					this.OnEdgeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
